name: Publish release artifacts

on:
  release:
    types: [created]
permissions:
  contents: write
  pull-requests: write

jobs:
  update_readme:
    name: Update Readme
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: main
    - name: Update versions in readme
      run: |
        sed -r -i "s/aws-nuke:v[0-9]+\.[0-9]+\.[0-9]+/aws-nuke:${{ github.ref_name }}/" README.md
        sed -r -i "s/aws-nuke-v[0-9]+\.[0-9]+\.[0-9]+/aws-nuke-${{ github.ref_name }}/" README.md
        sed -r -i "s/\/v[0-9]+\.[0-9]+\.[0-9]+\//\/${{ github.ref_name }}\//" README.md
    - uses: peter-evans/create-pull-request@v5
      name: Create Pull Request
      with:
        title: Update readme for ${{ github.ref_name }} release
        commit-message: Update readme for ${{ github.ref_name }} release
        body: Updating version references in the readme to ${{ github.ref_name }}
        branch: update-readme-${{ github.ref_name }}
        delete-branch: true

  release:
    name: Publish binaries
    runs-on: ubuntu-22.04
    steps:
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Build Project binaries
      env:
        CGO_ENABLED: 0
      run: |
        make xc
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/aws*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

  docker_build:
    runs-on: ubuntu-22.04
    name: Docker Build

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate image tags
      shell: bash
      run: echo "tags=quay.io/rebuy/aws-nuke:${GITHUB_REF#refs/tags/},docker.io/rebuy/aws-nuke:${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      id: generate_tags

    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Login to Quay.io
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ steps.generate_tags.outputs.tags }}
        platforms: linux/amd64,linux/arm64
